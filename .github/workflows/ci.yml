name: CI Pipeline

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  archetype:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Verify Maven file
        run: |
          if [ ! -f pom.xml ]; then
            echo "Error: pom.xml not found."
            exit 1
          fi

      - name: Extract Maven coordinates
        id: maven-coordinates
        run: |
          GROUP=$(mvn help:evaluate -Dexpression=project.groupId -q -DforceStdout)
          ARTIFACT=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "group=${GROUP}" >> $GITHUB_OUTPUT
          echo "artifact=${ARTIFACT}" >> $GITHUB_OUTPUT
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
    outputs:
      group: ${{ steps.maven-coordinates.outputs.group }}
      artifact: ${{ steps.maven-coordinates.outputs.artifact }}
      version: ${{ steps.maven-coordinates.outputs.version }}

  build:
    runs-on: ubuntu-22.04
    needs: archetype
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build and run tests
        run: mvn clean compile test package verify

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: target/site/jacoco/

  coverage-check:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report

      - name: Verify coverage
        run: |
          THRESHOLD=80
          COVERAGE=$(grep -Po '<line-rate>\\K[0-9.]+' target/site/jacoco/jacoco.xml | awk '{print $1 * 100}')
          if (( $(echo "$COVERAGE < $THRESHOLD" | bc -l) )); then
            echo "Coverage below threshold: $COVERAGE%"
            exit 1
          fi
          echo "Coverage meets the threshold: $COVERAGE%"
